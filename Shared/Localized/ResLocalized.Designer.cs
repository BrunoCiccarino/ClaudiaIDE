//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClaudiaIDE.Localized {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ResLocalized {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ResLocalized() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ClaudiaIDE.Localized.ResLocalized", typeof(ResLocalized).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API Endpoint.
        /// </summary>
        public static string ApiEndpoint {
            get {
                return ResourceManager.GetString("ApiEndpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The API Endpoint should point to a location that gives an ImagePath as JsonObject {jsonKey: UrlPointingToUrl}.
        /// </summary>
        public static string ApiEndpointDescpripion {
            get {
                return ResourceManager.GetString("ApiEndpointDescpripion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image background type.
        /// </summary>
        public static string BackgroundType {
            get {
                return ResourceManager.GetString("BackgroundType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Types of background image. Single: Displays the specified image. SlideShow: will the image of the specified folder to display slideshow. SingleEach: Displays one different image in the specified folder per opened tab. SingleWeb: Displays the image of the specified URL. WebApi: Displays a slideshow using the image URLs contained in the specified API response. Call Web API for each switch..
        /// </summary>
        public static string BackgroundTypeDes {
            get {
                return ResourceManager.GetString("BackgroundTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image blur radius.
        /// </summary>
        public static string BlurRadius {
            get {
                return ResourceManager.GetString("BlurRadius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply Gaussian Blur on background images.  This option does not support videos and GIFs. WebApi slideshow may have more delay, but it still works..
        /// </summary>
        public static string BlurRadiusDes {
            get {
                return ResourceManager.GetString("BlurRadiusDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory Path.
        /// </summary>
        public static string DirectoryPathType {
            get {
                return ResourceManager.GetString("DirectoryPathType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Background image directory path..
        /// </summary>
        public static string DirectoryPathTypeDes {
            get {
                return ResourceManager.GetString("DirectoryPathTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expand to IDE.
        /// </summary>
        public static string ExpandToIDEType {
            get {
                return ResourceManager.GetString("ExpandToIDEType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If true, background image expand to IDE. If false, background image set to text editor background. (false is default value).
        /// </summary>
        public static string ExpandToIDETypeDes {
            get {
                return ResourceManager.GetString("ExpandToIDETypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Path.
        /// </summary>
        public static string FilePathType {
            get {
                return ResourceManager.GetString("FilePathType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backgroud image file path..
        /// </summary>
        public static string FilePathTypeDes {
            get {
                return ResourceManager.GetString("FilePathTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General.
        /// </summary>
        public static string General {
            get {
                return ResourceManager.GetString("General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Horizontal Alignment.
        /// </summary>
        public static string HorizontalAlignmentType {
            get {
                return ResourceManager.GetString("HorizontalAlignmentType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image position in horizon..
        /// </summary>
        public static string HorizontalAlignmentTypeDes {
            get {
                return ResourceManager.GetString("HorizontalAlignmentTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image.
        /// </summary>
        public static string Image {
            get {
                return ResourceManager.GetString("Image", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image animation interval.
        /// </summary>
        public static string ImageAnimationIntervalType {
            get {
                return ResourceManager.GetString("ImageAnimationIntervalType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Background image fade animation interval. (value in format: HH:mm:ss).
        /// </summary>
        public static string ImageAnimationIntervalTypeDes {
            get {
                return ResourceManager.GetString("ImageAnimationIntervalTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image extensions.
        /// </summary>
        public static string ImageExtensionsType {
            get {
                return ResourceManager.GetString("ImageExtensionsType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only images with this extensions will be shown. (Comma separated).
        /// </summary>
        public static string ImageExtensionsTypeDes {
            get {
                return ResourceManager.GetString("ImageExtensionsTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image Stretch.
        /// </summary>
        public static string ImageStretchType {
            get {
                return ResourceManager.GetString("ImageStretchType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value that specifies how the content of this image stretches to fit the editor. The Image Stretch property accepts the following values: None, Uniform, UniformToFill, Fill.
        /// </summary>
        public static string ImageStretchTypeDes {
            get {
                return ResourceManager.GetString("ImageStretchTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Background image limit to only editor window.
        /// </summary>
        public static string IsLimitToMainlyEditorWindow {
            get {
                return ResourceManager.GetString("IsLimitToMainlyEditorWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this option is True, background image limit to only editor window..
        /// </summary>
        public static string IsLimitToMainlyEditorWindowDes {
            get {
                return ResourceManager.GetString("IsLimitToMainlyEditorWindowDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JSON-Key.
        /// </summary>
        public static string JsonKey {
            get {
                return ResourceManager.GetString("JsonKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key which holds the value to the downloadpath come common examples are &quot;url&quot;, &quot;src&quot;, &quot;img&quot;, &quot;image&quot;.
        /// </summary>
        public static string JsonKeyDescription {
            get {
                return ResourceManager.GetString("JsonKeyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Layout.
        /// </summary>
        public static string Layout {
            get {
                return ResourceManager.GetString("Layout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loop Slideshow.
        /// </summary>
        public static string LoopSlideshowType {
            get {
                return ResourceManager.GetString("LoopSlideshowType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will cause the slideshow to loop back to the beginning after the last image has been shown..
        /// </summary>
        public static string LoopSlideshowTypeDes {
            get {
                return ResourceManager.GetString("LoopSlideshowTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Height.
        /// </summary>
        public static string MaxHeightType {
            get {
                return ResourceManager.GetString("MaxHeightType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum height in pixels that the image can fill in the view. Applies only if the image stretch property is None..
        /// </summary>
        public static string MaxHeightTypeDes {
            get {
                return ResourceManager.GetString("MaxHeightTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Width.
        /// </summary>
        public static string MaxWidthType {
            get {
                return ResourceManager.GetString("MaxWidthType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum width in pixels that the image can fill in the view. Applies only if the image stretch property is None..
        /// </summary>
        public static string MaxWidthTypeDes {
            get {
                return ResourceManager.GetString("MaxWidthTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opacity.
        /// </summary>
        public static string OpacityType {
            get {
                return ResourceManager.GetString("OpacityType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Background image opacity. (value within the range of 0.00 &lt;= 1.00).
        /// </summary>
        public static string OpacityTypeDes {
            get {
                return ResourceManager.GetString("OpacityTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shuffle Slideshow.
        /// </summary>
        public static string ShuffleSlideshowType {
            get {
                return ResourceManager.GetString("ShuffleSlideshowType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Randomize the slideshow order..
        /// </summary>
        public static string ShuffleSlideshowTypeDes {
            get {
                return ResourceManager.GetString("ShuffleSlideshowTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SingleEach.
        /// </summary>
        public static string SingleEach {
            get {
                return ResourceManager.GetString("SingleEach", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SingleImage.
        /// </summary>
        public static string SingleImage {
            get {
                return ResourceManager.GetString("SingleImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SlideShow.
        /// </summary>
        public static string Slideshow {
            get {
                return ResourceManager.GetString("Slideshow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How much soft edge applied to background image..
        /// </summary>
        public static string SoftEdgeDes {
            get {
                return ResourceManager.GetString("SoftEdgeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SoftEdge Width (X axis).
        /// </summary>
        public static string SoftEdgeX {
            get {
                return ResourceManager.GetString("SoftEdgeX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SoftEdge Width (Y axis).
        /// </summary>
        public static string SoftEdgeY {
            get {
                return ResourceManager.GetString("SoftEdgeY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image tile mode.
        /// </summary>
        public static string TileMode {
            get {
                return ResourceManager.GetString("TileMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies how an image fills the editor window. None: not repeated. Tile:  filled by repeating. FlipX: flipped horizontally. FlipY: flipped vertically. FlipXY: The combination of FlipX and FlipY. This property not affects background image of IDE. If this property other than None, should change to other than zero ViewPortWidth and ViewPortHeight properties..
        /// </summary>
        public static string TileModeDes {
            get {
                return ResourceManager.GetString("TileModeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update interval.
        /// </summary>
        public static string UpdateIntervalType {
            get {
                return ResourceManager.GetString("UpdateIntervalType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Background image change interval. (value in format: HH:mm:ss).
        /// </summary>
        public static string UpdateIntervalTypeDes {
            get {
                return ResourceManager.GetString("UpdateIntervalTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Url.
        /// </summary>
        public static string Url {
            get {
                return ResourceManager.GetString("Url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Url pointing to the image to show.
        /// </summary>
        public static string UrlDescription {
            get {
                return ResourceManager.GetString("UrlDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Color theme to use.
        /// </summary>
        public static string UseColorTheme {
            get {
                return ResourceManager.GetString("UseColorTheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies a color theme. If Dark is selected, the contents specified in Dark Theme will be used. If UseSystemSetting is specified, the color scheme to be used is determined based on the OS color scheme theme..
        /// </summary>
        public static string UseColorThemeDescription {
            get {
                return ResourceManager.GetString("UseColorThemeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vertical Alignment.
        /// </summary>
        public static string VerticalAlignmentType {
            get {
                return ResourceManager.GetString("VerticalAlignmentType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image position in vertical..
        /// </summary>
        public static string VerticalAlignmentTypeDes {
            get {
                return ResourceManager.GetString("VerticalAlignmentTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image horizontal position in ViewBox.
        /// </summary>
        public static string ViewBoxPointX {
            get {
                return ResourceManager.GetString("ViewBoxPointX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This property can set a double value for the Image horizontal position in WPF ViewBox..
        /// </summary>
        public static string ViewBoxPointXDes {
            get {
                return ResourceManager.GetString("ViewBoxPointXDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image vertical position in ViewBox.
        /// </summary>
        public static string ViewBoxPointY {
            get {
                return ResourceManager.GetString("ViewBoxPointY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This property can set double value about Image vertical position in WPF ViewBox..
        /// </summary>
        public static string ViewBoxPointYDes {
            get {
                return ResourceManager.GetString("ViewBoxPointYDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Base tile image relative height.
        /// </summary>
        public static string ViewPortHeight {
            get {
                return ResourceManager.GetString("ViewPortHeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Base tile image relative height in editor window. (value within the range of 0.00 &lt;= 1.00) This property not affects background image of IDE..
        /// </summary>
        public static string ViewPortHeightDes {
            get {
                return ResourceManager.GetString("ViewPortHeightDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Base tile image horizontal position in ViewPort.
        /// </summary>
        public static string ViewPortPointX {
            get {
                return ResourceManager.GetString("ViewPortPointX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This property can set a double value for the base tile image horizontal position in WPF ViewPort..
        /// </summary>
        public static string ViewPortPointXDes {
            get {
                return ResourceManager.GetString("ViewPortPointXDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Base tile image vertical position in ViewPort.
        /// </summary>
        public static string ViewPortPointY {
            get {
                return ResourceManager.GetString("ViewPortPointY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This property can set double value about base tile image vertical position in WPF ViewPort..
        /// </summary>
        public static string ViewPortPointYDes {
            get {
                return ResourceManager.GetString("ViewPortPointYDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Base tile image relative width.
        /// </summary>
        public static string ViewPortWidth {
            get {
                return ResourceManager.GetString("ViewPortWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Base tile image relative width in editor window. (value within the range of 0.00 &lt;= 1.00) This property not affects background image of IDE..
        /// </summary>
        public static string ViewPortWidthDes {
            get {
                return ResourceManager.GetString("ViewPortWidthDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Slideshot using Web API.
        /// </summary>
        public static string WebApi {
            get {
                return ResourceManager.GetString("WebApi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download Interval.
        /// </summary>
        public static string WebApiDownloadInterval {
            get {
                return ResourceManager.GetString("WebApiDownloadInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The time to wait until the next image get downloaded.
        /// </summary>
        public static string WebApiDownloadIntervalDescpription {
            get {
                return ResourceManager.GetString("WebApiDownloadIntervalDescpription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Web Image.
        /// </summary>
        public static string WebImage {
            get {
                return ResourceManager.GetString("WebImage", resourceCulture);
            }
        }
    }
}
